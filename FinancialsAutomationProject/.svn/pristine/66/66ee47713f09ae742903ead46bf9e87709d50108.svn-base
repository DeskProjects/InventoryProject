package krawler.erp.GSTFORM5Verification;


	import java.awt.AWTException;
	import java.io.IOException;
	import java.util.Properties;

	import org.openqa.selenium.By;
	import org.openqa.selenium.Keys;
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.WebElement;
	import org.openqa.selenium.support.ui.ExpectedConditions;
	import org.openqa.selenium.support.ui.WebDriverWait;

	import krawler.erp.page.Utilities;
	import krawler.erp.testCases.GSTForm5_TC;

	// --------------------------------------------------------------- For Cash Sales , Sales Invoice and Receive Payment Module---------------------------------------------------------------

	public class GSTReportForSales extends GSTForm5_TC{
		

			public static void GSTReportVerificationforsales(double box1, double box2, double box3, double box4, double box6, double box7, double box8, double box13,WebDriver driver,String set) throws InterruptedException, IOException, AWTException 
				{		
				  try
						{
					        Properties pro = Utilities.fetchProValue("OR_GSTForm.properties");
					        Thread.sleep(1000);
						   
					    	//Open Statutory Link	
							new WebDriverWait(driver,60).until(ExpectedConditions.elementToBeClickable(By.xpath(pro.getProperty("Statutory"))));
						    driver.findElement(By.xpath(pro.getProperty("Statutory"))).click();
							Thread.sleep(2000);
							
							//Click on Report link
							new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("Reportplus"))));
					        driver.findElement(By.xpath(pro.getProperty("Reportplus"))).click();
					        Thread.sleep(1000);
					        
					        //Click on GST link
					        new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("GSTPlus"))));
					        driver.findElement(By.xpath(pro.getProperty("GSTPlus"))).click();
					        Thread.sleep(1000);
					        
					        //Click on GSTReport link
					        new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("BreakofGST"))));
					        driver.findElement(By.xpath(pro.getProperty("BreakofGST"))).click();
					        Thread.sleep(2000);
					        
					        //Click on Fetch button
					        driver.findElement(By.xpath(pro.getProperty("Fetch"))).click();
					        Thread.sleep(2000);
					        Utilities.isLoadingDisappear(6000, driver);
					        
					        
					        // Boxes verification in GST form 5
					        
                            double actBox1= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox1", "Box1");
					        
					        double actBox2= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox2", "Box2");
					        
					        double actBox3= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox3", "Box3");
					        
					        double actBox4= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox4", "Box4");
					  
					        double actBox5= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox5", "Box5");
					      
					        double actBox6=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox6", "Box6");
					       
					        double actBox7=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox7", "Box7");
					        
					        double actBox8= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox8", "Box8");
					        
				            double actBox9=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox9", "Box9");
					        
					        double actBox13=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox13", "Box13");
					        
					        
					        
					
					        
					      //ExpBox initialization initial as zero
					        
					        double expBox1=0;
					        double expBox2=0;
					        double expBox3=0;
					        double expBox4=0;
					        double expBox5=0;
					        double expBox6=0;
					        double expBox7=0;
					        double expBox8=0;
					        double expBox9=0;
					        double expBox13=0;

					       /* System.out.println("old Box 1 "+box1);
					        System.out.println("old Box 2 "+box2);
					        System.out.println("old Box 3 "+box3);
					        System.out.println("old Box 4 "+box4);
					        System.out.println("old Box 6 "+box6);  // Please keep it in comment mode always.
					        System.out.println("old Box 7 "+box7);
					        System.out.println("old Box 8 "+box8);
					        System.out.println("old Box 13 "+box13);
					       */


					        // Logic as per the tax standard  
					        
					        if(set.equalsIgnoreCase("set1"))
					        {
					        	expBox1=box1+0;
					        	expBox2=box2+0;
					        	expBox3=box3+2000;
					        	expBox4=box1+box2+box3+2000;
					        	expBox5=box5+0;
					        	expBox6=box6+0;
					        	expBox7=box7+0;
					        	expBox13=box13+2000;
						        expBox8= box6-box7+0+0;			// Value of 6 and 7 is 0 from UI and now we are adding box 6 and 7 values 0 + 0 which is updated via transaction.		        	
					        }
					        if(set.equalsIgnoreCase("set2"))
					        {
					        	expBox1=box1+2000;
					        	expBox2=box2+0;
					        	expBox3=box3+0;
					        	expBox4=box1+box2+box3+2000;
					        	expBox5=box5+0;
					        	expBox6=box6+140;
					        	expBox7=box7+0;
					        	expBox13=box13+2000;
						        expBox8= box6-box7+140+0;
					            
					        }
					        if(set.equalsIgnoreCase("set3"))
					        {
					        	expBox1=box1+0;
					        	expBox2=box2+1000;
					        	expBox3=box3+0;
					        	expBox4=box1+box2+box3+1000;
					        	expBox5=box5+0;
					        	expBox6=box6+0;
					        	expBox7=box7+0;
					        	expBox13=box13+1000;
						        expBox8= box6-box7+0+0;

					        }
					        if(set.equalsIgnoreCase("set4"))
					        {
					        	expBox1=box1+0;
					        	expBox2=box2+0;
					        	expBox3=box3+0;
					        	expBox4=box1+box2+box3+0;
					        	expBox5=box5+0;
					        	expBox6=box6+0;
					        	expBox7=box7+0;
					        	expBox13=box13+1000;
						        expBox8= box6-box7+0+0;
					        	
					        }

					        double ActvalBox4=actBox1+actBox2+actBox3;
					        double ActvalBox8=actBox6-actBox7;				        
			
					      // Define actual and expected boxes in array for compare the data.
					        String header[]={"Box1","Box2","Box3","Box4","Box6","Box7","Box8","Box13"};
					        double actualUIdata[]={actBox1,actBox2,actBox3,ActvalBox4,actBox6,actBox7,ActvalBox8,actBox13};
					        double expecteddata[]={expBox1,expBox2,expBox3,expBox4,expBox6,expBox7,expBox8,expBox13};
					        boolean flag=true;
					        
					        for(int i=0 ; i<actualUIdata.length ;i++)
					        {
					        	if(actualUIdata[i]==expecteddata[i]){
					        		System.out.println("*** Matched box ["+header[i]+"] as UI amount ["+actualUIdata[i]+"] with expected amount ["+expecteddata[i]+"] !!!");
							        GSTForm5_TC.box1=actBox1;
							        GSTForm5_TC.box2=actBox2;
							        GSTForm5_TC.box3=actBox3;
							        GSTForm5_TC.box4=ActvalBox4;
							        GSTForm5_TC.box6=actBox6;
							        GSTForm5_TC.box7=actBox7;
							        GSTForm5_TC.box8=ActvalBox8;
							        GSTForm5_TC.box13=actBox13;
					        	}
					        	else{
					        		System.out.println("*** FAILED to Match box ["+header[i]+"] as UI amount ["+actualUIdata[i]+"] with expected amount ["+expecteddata[i]+"] !!!");
					        		flag=false;
					        	}
					        }
					        
					        if(flag=false){
					        	System.out.println("Failed to verify Report plz check Log");
					        }
 
					        // Close the GST form 5 report.
					        driver.findElement(By.xpath(pro.getProperty("GSTform5cls"))).click();
					        Thread.sleep(2000);
					        
						 }
				  
				  catch(Exception EX){
				//  Utilities.handleError(EX, driver);
					  EX.printStackTrace();
				  }
					  
				  }
			 
			// --------------------------------------------------------------- For Credit Note OtherWise Module---------------------------------------------------------------
			 
			
				 public static void GSTReportVerificationforCN(double box5, double box6, double box7, double box9,WebDriver driver,String set) throws InterruptedException, IOException, AWTException 
					{		
					 try
						{
					        Properties pro = Utilities.fetchProValue("OR_GSTForm.properties");
					        Thread.sleep(1000);
						   
					    	//Open Statutory Link	
							new WebDriverWait(driver,60).until(ExpectedConditions.elementToBeClickable(By.xpath(pro.getProperty("Statutory"))));
						    driver.findElement(By.xpath(pro.getProperty("Statutory"))).click();
							Thread.sleep(2000);
							
							//Click on Report link
							new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("Reportplus"))));
					        driver.findElement(By.xpath(pro.getProperty("Reportplus"))).click();
					        Thread.sleep(1000);
					        
					        //Click on GST link
					        new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("GSTPlus"))));
					        driver.findElement(By.xpath(pro.getProperty("GSTPlus"))).click();
					        Thread.sleep(1000);
					        
					        //Click on GSTReport link
					        new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("BreakofGST"))));
					        driver.findElement(By.xpath(pro.getProperty("BreakofGST"))).click();
					        Thread.sleep(2000);
					        
					        //Click on Fetch button
					        driver.findElement(By.xpath(pro.getProperty("Fetch"))).click();
					        //Thread.sleep(2000);
					        Utilities.isLoadingDisappear(160, driver);
					       
					        // Boxes verification in GST form 5
					        
					        double actBox1= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox1", "Box1");
					        
					        double actBox2= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox2", "Box2");
					        
					        double actBox3= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox3", "Box3");
					        
					        double actBox4= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox4", "Box4");
					  
					        double actBox5= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox5", "Box5");
					      
					        double actBox6=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox6", "Box6");
					       
					        double actBox7=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox7", "Box7");
					        
					        double actBox8= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox8", "Box8");
					        
				            double actBox9=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox9", "Box9");
					        
					        double actBox13=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox13", "Box13");
					        
					        
						    //ExpBox initialization initial as zero
					        double expBox1=0;
					        double expBox2=0;
					        double expBox3=0;
					        double expBox4=0;
					        double expBox5=0;
					        double expBox6=0;
					        double expBox7=0;
					        double expBox8=0;
					        double expBox9=0;
					        double expBox13=0;

					        /*System.out.println("old Box 1 "+box1);
					        System.out.println("old Box 2 "+box2);
					        System.out.println("old Box 3 "+box3);
					        System.out.println("old Box 4 "+box4);
					        System.out.println("old Box 6 "+box6);  // Please keep it in comment mode always.
					        System.out.println("old Box 7 "+box7);
					        System.out.println("old Box 8 "+box8);
					        System.out.println("old Box 13 "+box13);*/
					       

					      // Logic as per the tax standard  
					        if(set.equalsIgnoreCase("set1"))
					        {
					        	expBox1=box1-0;
					        	expBox2=box2-0;
					        	expBox3=box3-2000;
					        	expBox4=box1+box2+box3-2000;
					        	expBox5=box5-0;
					        	expBox6=box6-0;
					        	expBox7=box7-0;
					        	expBox13=box13-2000;
						        expBox8= box6-box7-0-0;			// Value of 6 and 7 is 0 from UI and now we are adding box 6 and 7 values 0 + 0 which is updated via transaction.		        	
					        }
					        if(set.equalsIgnoreCase("set2"))
					        {
					        	expBox1=box1-2000;
					        	expBox2=box2-0;
					        	expBox3=box3-0;
					        	expBox4=box1+box2+box3-2000;
					        	expBox5=box5-0;
					        	expBox6=box6-140;
					        	expBox7=box7-0;
					        	expBox13=box13-2000;
						        expBox8= box6-box7-140-0;
					            
					        }
					        if(set.equalsIgnoreCase("set3"))
					        {
					        	expBox1=box1-0;
					        	expBox2=box2-1000;
					        	expBox3=box3+0;
					        	expBox4=box1+box2+box3-1000;
					        	expBox5=box5-0;
					        	expBox6=box6-0;
					        	expBox7=box7-0;
					        	expBox13=box13-1000;
						        expBox8= box6-box7-0-0;

					        }
					        if(set.equalsIgnoreCase("set4"))
					        {
					        	expBox1=box1-0;
					        	expBox2=box2-0;
					        	expBox3=box3-0;
					        	expBox4=box1+box2+box3-0;
					        	expBox5=box5-0;
					        	expBox6=box6-0;
					        	expBox7=box7-0;
					        	expBox13=box13-1000;
						        expBox8= box6-box7-0-0;
					        	
					        }

					        double ActvalBox4=actBox1+actBox2+actBox3;
					        double ActvalBox8=actBox6-actBox7;				        
			
					        // Define actual and expected boxes in array for compare the data.
					        String header[]={"Box1","Box2","Box3","Box4","Box6","Box7","Box8","Box13"};
					        double actualUIdata[]={actBox1,actBox2,actBox3,ActvalBox4,actBox6,actBox7,ActvalBox8,actBox13};
					        double expecteddata[]={expBox1,expBox2,expBox3,expBox4,expBox6,expBox7,expBox8,expBox13};
					        boolean flag=true;
					        
					        for(int i=0 ; i<actualUIdata.length ;i++)
					        {
					        	if(actualUIdata[i]==expecteddata[i]){
					        		System.out.println("*** Matched box ["+header[i]+"] as UI amount ["+actualUIdata[i]+"] with expected amount ["+expecteddata[i]+"] !!!");
							        GSTForm5_TC.box1=actBox1;
							        GSTForm5_TC.box2=actBox2;
							        GSTForm5_TC.box3=actBox3;
							        GSTForm5_TC.box4=ActvalBox4;
							        GSTForm5_TC.box6=actBox6;
							        GSTForm5_TC.box7=actBox7;
							        GSTForm5_TC.box8=ActvalBox8;
							        GSTForm5_TC.box13=actBox13;
					        	}
					        	else{
					        		System.out.println("*** FAILED to Match box ["+header[i]+"] as UI amount ["+actualUIdata[i]+"] with expected amount ["+expecteddata[i]+"] !!!");
					        		flag=false;
					        	}
					        }
					        
					        if(flag=false){
					        	System.out.println("Failed to verify Report plz check Log");
					        }
					        
                            // Close GST Form 5 report.
					        driver.findElement(By.xpath(pro.getProperty("GSTform5cls"))).click();
					        Thread.sleep(2000);
					        
						 }
				  
				  catch(Exception EX){
				//  Utilities.handleError(EX, driver);
					  EX.printStackTrace();
				  }
					  
				  }
			 
			 
			//--------------------------------------------------------------- To get data from GST form 5 ------------------------------------------------------------
			 public static void getDataGSTReport(WebDriver driver) throws InterruptedException, IOException, AWTException 
				{
				  try
						{
					        Properties pro = Utilities.fetchProValue("OR_GSTForm.properties");
					        Thread.sleep(1000);				   
					    	//Open Statutory Link	
							new WebDriverWait(driver,60).until(ExpectedConditions.elementToBeClickable(By.xpath(pro.getProperty("Statutory"))));
						    driver.findElement(By.xpath(pro.getProperty("Statutory"))).click();
						    Thread.sleep(2000);
							
							//Click on Report link
							new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("Reportplus"))));
					        driver.findElement(By.xpath(pro.getProperty("Reportplus"))).click();
					        Thread.sleep(1000);
					        
					        //Click on GST link
					        new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("GSTPlus"))));
					        driver.findElement(By.xpath(pro.getProperty("GSTPlus"))).click();
					        Thread.sleep(1000);
					        
					        //Click on GSTReport link
					        new WebDriverWait(driver, 100).until(ExpectedConditions.presenceOfElementLocated(By.xpath(pro.getProperty("BreakofGST"))));
					        driver.findElement(By.xpath(pro.getProperty("BreakofGST"))).click();
					        Thread.sleep(2000);
					        
					        //Click on Fetch button
					        driver.findElement(By.xpath(pro.getProperty("Fetch"))).click();
					        Thread.sleep(2000);
					        
					        
					        // Boxes verification in GST form 5
					       
					        double valBox1= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox1", "Box1");
					        
					        double valBox2= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox2", "Box2");
					        
					        double valBox3= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox3", "Box3");
					        
					        double valBox4= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox4", "Box4");
					        
					        double valBox5= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox5", "Box5");
					         
					        double valBox6= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox6", "Box6");
					        
					        double valBox7= Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox7", "Box7");
					        
					        double valBox13=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox13", "Box13");
					       
					        double valBox8= valBox6-valBox7;
					         
					        double valBox9=Utilities.gstpositivenegative_value(driver, "OR_GSTForm.properties", "NegBox9", "Box9");
					        
					        // Assign current value for Boxes
					        GSTForm5_TC.box1=valBox1;
					        GSTForm5_TC.box2=valBox2;
					        GSTForm5_TC.box3=valBox3;
					        GSTForm5_TC.box4=valBox4;
					        GSTForm5_TC.box5=valBox5;
					        GSTForm5_TC.box6=valBox6;
					        GSTForm5_TC.box7=valBox7;
					        GSTForm5_TC.box8=valBox8;
					        GSTForm5_TC.box9=valBox9;
					        GSTForm5_TC.box13=valBox13;
					       
					      	
						}
				  catch(Exception Ex){
					  Utilities.handleError(Ex, driver);
				  }
				}
			 
			 }

						  