package krawler.erp.inventory;

import java.awt.AWTException;
import java.io.IOException;
import java.util.List;
import java.util.Properties;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import krawler.erp.page.EmailFunctionality;
import krawler.erp.page.Utilities;

public class InventoryCS {

	public static void create_AutoDoCashSale(String documentId, String productid, String customerId, WebDriver driver)throws InterruptedException, AWTException, IOException {		
		try {
//				documentId="AsBCS"+documentId;
				Properties pro = Utilities.fetchProValue("OR_CashSale.properties");
				
				Utilities.waitandClick(pro.getProperty("CreateCashSaleIcon"), driver);
								
				selectFromNormalDropDown(customerId,pro.getProperty("CustomerId"), driver );								
				Utilities.enterTextInDropDown("NA", pro.getProperty("sequenceFormat"), driver);			
				Utilities.enterTextInDropDown("AutoCS"+documentId, pro.getProperty("CashSaleNo"), driver);	
				
				//enable enter auto DO
				Utilities.clickCheckBox("//*[@name='autogenerateDO']", "check", driver);
				selectFromNormalDropDown("NA","//*[@name='sequenceformatDo']/following::input[1]", driver );	
				Utilities.enterTextNormalBox("AutoDoCS"+documentId, "//*[@name='numberDo']", driver);
				
				Utilities.HoverandClick(pro.getProperty("addButton"), driver);				
				Utilities.isLoadingDisappear(120, driver);
				Utilities.enterTextNormalBox("AsB"+productid, pro.getProperty("productId"), driver);
				Utilities.isLoadingDisappear(120, driver);
				Utilities.clickCheckBox(pro.getProperty("SelectProductS"), "check", driver);				
				int totalResult=Utilities.totalSize(pro.getProperty("TotalFindProducts"), driver);				
				Utilities.HoverandClick(pro.getProperty("clickAdd"), driver);
				try{
					WebElement button=new WebDriverWait(driver,3).until(ExpectedConditions.elementToBeClickable(By.xpath("//button[text()='OK']")));
					if(button.isDisplayed())
					{
						Thread.sleep(1000);
						button.click();
					}
				}
				catch(Exception Ex){
					// handle (Please ensure all product(s) should be mapped with Product Tax Class)
				}
				
				int headRsize=Utilities.totalSize(pro.getProperty("HeaderNames"), driver);
				int indexQty=0;
				for(int i=1; i<=headRsize; i++){
					String HeadeName=driver.findElement(By.xpath("//div[@id='salesreceipteditproductdetailsgrid']/div/div/div/div/div[1]/div[1]/div/table/thead/tr/td["+i+"]/div")).getText();
				
					if(HeadeName.equalsIgnoreCase("Quantity")){
						indexQty=i;
					}
				}
				
				for(int i=1; i<=totalResult; i++){				
					Utilities.HoverandClick("//div[@id='salesreceipteditproductdetailsgrid']/div/div/div/div/div[2]/div[1]/div["+i+"]/table/tbody/tr/td["+indexQty+"]/div", driver);				
					Utilities.sendText("10");
					Thread.sleep(1000);
				}
					
				Utilities.enterTextNormalBox("This is AUTO BUILD ASSEMBLY Cash sales", pro.getProperty("Memo"), driver);	
				Utilities.clickButton("Save", 1000, driver);
				Utilities.clickButton("Yes", 1000, driver);
				Utilities.clickButton("No", 1000, driver);
				Utilities.clickButton("OK", 1000, driver);
							    
			    Utilities.HoverandClick(pro.getProperty("CloseCashSale"), driver);
			    
				System.out.println("******* AUTO BUILD ASSEMBLY DO with Cash Sale : ["+ "AutoDoCS"+documentId +"] is Created !!!!!! ********" );
	
		} 
		catch (Exception EX) {
		System.out.println("******* AUTO BUILD ASSEMBLY DO with Cash Sale is NOT Created for :["+ "AutoDoCS"+documentId +"] checlk LOG *******" );
		Utilities.handleError(EX, driver);
	}
}
	
	// select item from NormalDrop Down
	public static void selectFromNormalDropDown(String text, String expForname, WebDriver driver) throws InterruptedException, AWTException, IOException
	{
		WebElement enterText=null;
		boolean success = false;	
		for( int num_try = 1 ; !success && num_try < 10 ; num_try++ )
		{
			try
			{
			enterText=driver.findElement(By.xpath(expForname));
			enterText.clear();
			enterText.sendKeys(text);
			Thread.sleep(1000);
			WebElement element=driver.findElement(By.xpath("//div[@class='x-layer x-combo-list ' and contains(@style,'visible')]//*[text()='"+text+"']"));		
			element.click();
	    	Thread.sleep(1500);
	        success = true;
			}
			catch(Exception EX){
			if(num_try == 9)
			{
				Utilities.handleError(EX, driver);
			}
		}
		}
}
	
//*************** Auto Build DO ***************	
	public static void create_AutoDosalesInvoice(String documentId, String productid, String customerid, WebDriver driver)throws InterruptedException, AWTException, IOException {
		
		try {
//				documentId="SI"+documentId;
				Properties pro = Utilities.fetchProValue("OR_SalesInvoice.properties");
				// clicked on main icon
				
				Utilities.HoverandClick(pro.getProperty("SalesInvoiceIcon"), driver);				
				Utilities.clickCheckBox(pro.getProperty("includeTax"), "uncheck", driver);			
				selectFromNormalDropDown(customerid, pro.getProperty("Customer"), driver);			
				Utilities.enterTextInDropDown("NA", pro.getProperty("SequenceFormat"), driver);
				Utilities.enterTextInDropDown("NET 45", pro.getProperty("Term"), driver);
				Utilities.enterTextNormalBox("AutoSI"+documentId, pro.getProperty("DocumentNo"), driver);
				
				//enable enter auto DO
				Utilities.clickCheckBox("//*[@name='autogenerateDO']", "check", driver);
				selectFromNormalDropDown("NA","//*[@name='sequenceformatDo']/following::input[1]", driver );	
				Utilities.enterTextNormalBox("AutoDoSI"+documentId, "//*[@name='numberDo']", driver);

				Utilities.HoverandClick(pro.getProperty("AddButton"), driver);				
				Utilities.isLoadingDisappear(120, driver);
				Utilities.enterTextInDropDown("AsB"+productid, pro.getProperty("ProductSearch"), driver);
				Utilities.isLoadingDisappear(120, driver);				
				Utilities.clickCheckBox(pro.getProperty("SelectProductS"), "check", driver);			
				int totalResult=Utilities.totalSize("//*[text()='Product Category: (None)']/parent::div/following-sibling::div//table/tbody/tr/td[1]/div/div", driver);
//				System.out.println(totalResult);
				Utilities.HoverandClick(pro.getProperty("addProducts"), driver);
				try{
					WebElement button=new WebDriverWait(driver,3).until(ExpectedConditions.elementToBeClickable(By.xpath("//button[text()='OK']")));
					if(button.isDisplayed())
					{
						Thread.sleep(1000);
						button.click();
					}
				}
				catch(Exception Ex){
					// handle (Please ensure all product(s) should be mapped with Product Tax Class)
				}

				List<WebElement> header=driver.findElements(By.xpath("//div[@id='Invoiceeditproductdetailsgrid']/div/div/div/div/div[1]/div[1]/div/table/thead/tr/td/div"));
				int headRsize=header.size();
				int indexQty=0, indexTax=0;
				
				for(int i=1; i<=headRsize; i++){
					String HeadeName=driver.findElement(By.xpath("//div[@id='Invoiceeditproductdetailsgrid']/div/div/div/div/div[1]/div[1]/div/table/thead/tr/td["+i+"]/div")).getText();			
					if(HeadeName.equalsIgnoreCase("Quantity")){
						indexQty=i;
					}
				}						
				//enter line level quantity
				for(int i=1; i<=totalResult; i++){				
					Utilities.HoverandClick("//div[@id='Invoiceeditproductdetailsgrid']/div/div/div/div/div[2]/div[1]/div["+i+"]/table/tbody/tr/td["+indexQty+"]/div", driver);				
					Utilities.sendText("10");
					Thread.sleep(1000);
				}
				
				Utilities.enterTextNormalBox("This is AUTO BUILD ASSEMBLY Sales Invoice", "//*[@id='memo2Invoice']", driver);	
				Utilities.clickButton("Save", 1000, driver);
				Utilities.clickButton("Yes", 1000, driver);
				Utilities.clickButton("No", 1000, driver);
				Utilities.clickButton("OK", 1000, driver);
			    
			    Utilities.HoverandClick(pro.getProperty("CloseSalesInvoice"), driver);
			    
				System.out.println("******* AUTO BUILD ASSEMBLY DO with Sales Invoice: ["+ documentId +"] is Created !!!!!! ********" );
				
			} catch (Exception EX) {
				System.out.println("******* AUTO BUILD ASSEMBLY DO with Sales Invoice is NOT Created for :["+ documentId +"] checlk LOG *******" );
				Utilities.handleError(EX, driver);
			}

		}
	
}
