package krawler.erp.FixedAsset;

import java.awt.AWTException;
import java.io.IOException;
import java.util.Iterator;
import java.util.Properties;
import java.util.Set;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import krawler.erp.page.Utilities;
import krawler.erp.utils.SikulliUtil;

public class AssetMaintenanceSchedulesReport {
	
	// ********************** Export All types of Files ********************
	
				public  void Export_UpdateSchedule (String buttonName,WebDriver driver) throws InterruptedException, IOException, AWTException 
				{	
					
					try {	
					
				    WebDriverWait wait = new WebDriverWait(driver, 60);
					
				    Properties pro = Utilities.fetchProValue("OR_ExportFunction.properties");
				    String ExportButtonName="Export";
					String reportIcon= "//span[text()='Asset Maintenance Schedules Report']";
					String waitForQuickSearch= "//button[text()='Fetch']";
					String closeReportPage= "//li[@id='as__assetMaintenanceScheduleGridReport']/a[1]";
					
					if(buttonName.equalsIgnoreCase("Export List"))
					   {
							ExportButtonName="Export List";
						}
						
					       else if(buttonName.equalsIgnoreCase("Export"))
					       {
							ExportButtonName="Export ";
						    }
						
						WebElement element =wait.until(ExpectedConditions.elementToBeClickable(By.xpath(reportIcon)));
						element.click();
						Thread.sleep(1000);				
						
						Utilities.clickButton("Fetch", 500, driver);	
					
					try	
					{			

				        Thread.sleep(1000);	
						Utilities.clickCheckBox(waitForQuickSearch, "check" , driver);
						
		// ********************************  Export  CSV File  *****************************
						
						Utilities.clickButton(ExportButtonName, 1000, driver);								
						Utilities.HoverandClick(pro.getProperty("ExportToCSV"), driver);			
						element =wait.until(ExpectedConditions.elementToBeClickable(By.xpath(pro.getProperty("WindowExportBtn"))));
						element.click();
						Thread.sleep(1000);
						SikulliUtil.sikulli_waitClick(driver, "CSVtype");
						SikulliUtil.sikulli_waitClick(driver, "ClsX");				
						System.out.println("* * * * * * EXPORT for [CSV] completed successfully * * * * * * *");			
						Thread.sleep(1500);	
						
		// **************** Export PDF Files *****************
						
						Utilities.clickButton(ExportButtonName, 500, driver);			
						String parentWindow=driver.getWindowHandle();
						Utilities.HoverandClick(pro.getProperty("ExportToPDF"), driver);
						element =wait.until(ExpectedConditions.elementToBeClickable(By.xpath(pro.getProperty("pdfTemplate"))));
						element.click();			
						Thread.sleep(1000);			
						element =wait.until(ExpectedConditions.elementToBeClickable(By.xpath(pro.getProperty("WindowExportBtn"))));
						element.click();			
						Thread.sleep(3500);
	//	SikulliUtil.sikulli_waitClick(driver, "PDFtype");
						
						
						Set s=driver.getWindowHandles();                    //this method will gives you the handles of all opened windows
						Iterator ite=s.iterator();
						
						System.out.println("* * * * * * EXPORT for [PDF] completed successfully * * * * * * *");
						
				/*		while(ite.hasNext())
						{
						    String childWindow=ite.next().toString();
						    if(!childWindow.contains(parentWindow))
						    {
						        driver.switchTo().window(childWindow);				    
						        Thread.sleep(1000);
						        System.out.println("* * * * * * EXPORT for [PDF] completed successfully * * * * * * *");
						        driver.close();
						        driver.switchTo().window(parentWindow);
						        Thread.sleep(1000);
						    }
						}
				*/
						
	//************************************ Export Excel Files ***********************************
						
						Utilities.clickButton(ExportButtonName, 500, driver);
						Utilities.HoverandClick(pro.getProperty("ExportToExcel"), driver);
						Thread.sleep(3500);			
						element =wait.until(ExpectedConditions.elementToBeClickable(By.xpath(pro.getProperty("WindowExportBtn"))));
						element.click();
						Thread.sleep(1000);
						SikulliUtil.sikulli_waitClick(driver, "XLStype");
						SikulliUtil.sikulli_waitClick(driver, "ClsX");				
					    System.out.println("* * * * * * EXPORT for [Excel] completed successfully * * * * * * *");			
						Thread.sleep(1500);			
						
					
						
	//**********Print To HTML*************
						
					
						WebElement Print = wait.until(ExpectedConditions.elementToBeClickable(
							    By.xpath(pro.getProperty("Print")))); 
					    Print.click();
					    Thread.sleep(3000);   
					    
					    WebElement Print1 = wait.until(ExpectedConditions.elementToBeClickable(
							    By.xpath(pro.getProperty("Print1")))); 
					    Print1.click();
					    Thread.sleep(3000);   
					    
		//Utilities.clickButton("Print", 3000, driver);						
						
					    s=driver.getWindowHandles();                  //this method will gives you the handles of all opened windows
						ite=s.iterator();
						while(ite.hasNext())
						{
						    String childWindow=ite.next().toString();
						    if(!childWindow.contains(parentWindow))
						    {
						        driver.switchTo().window(childWindow);
						        driver.manage().window().maximize();
						        Thread.sleep(1000);
						        System.out.println("* * * * * * EXPORT for [Print] completed successfully * * * * * * *");
						        driver.close();
						        driver.switchTo().window(parentWindow);
						        Thread.sleep(1500);
						    }
						}
						
						Utilities.HoverandClick(closeReportPage, driver);
						
						System.out.println("* * * * * * EXPORT for module Update Schedule Maintenance Report completed successfully * * * * * * *");											
								}	
					
								catch(Exception noData){
								System.out.println("* * * * * * Today's data are Not Present ! ! ! * * * * * * ");
								noData.printStackTrace();
								}
							}
				
						catch (Exception EX) 
						{
							System.out.println("* * * * * * !!!!!!! EXPORT for [Update Schedule Maintenance Report] FAILED !!!!!! * * * * * * *");			
							Utilities.handleError(EX, driver);
						}
				}
				
	public static String button_path(String BtnName) 
	    {
						String file_path = System.getProperty("user.dir")+"\\sikulliSnaps\\ExportSnap\\Common\\"+ BtnName +".PNG";
						return file_path;
	    }
	}

