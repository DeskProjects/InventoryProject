package krawler.erp.testCases;

import java.awt.AWTException;
import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import krawler.erp.LeaseManagementWithFixedAssetFlow.AssetGroup;
import krawler.erp.LeaseManagementWithFixedAssetFlow.CRMHandle2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.LeaseContract2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.LeaseDeliveryOrder2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.LeaseManagement2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.LeaseOrder2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.LeaseQuotation2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.NormalSalesOrder2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.OpenProductMaintenance2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.OpenProductReplacement2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.ProductManagement2;
import krawler.erp.LeaseManagementWithFixedAssetFlow.SwitchToCRM2;
import krawler.erp.LeaseManagementWithInventoryFlow.CRMHandle;
import krawler.erp.LeaseManagementWithInventoryFlow.CustomerManagement;
import krawler.erp.LeaseManagementWithInventoryFlow.LeaseContract1;
import krawler.erp.LeaseManagementWithInventoryFlow.LeaseDeliveryOrder1;
import krawler.erp.LeaseManagementWithInventoryFlow.LeaseInvoice1;
import krawler.erp.LeaseManagementWithInventoryFlow.LeaseManagement1;
import krawler.erp.LeaseManagementWithInventoryFlow.LeaseOrder1;
import krawler.erp.LeaseManagementWithInventoryFlow.LeaseQuotation1;
import krawler.erp.LeaseManagementWithInventoryFlow.LeaseSalesReturn1;
import krawler.erp.LeaseManagementWithInventoryFlow.NormalSalesOrder;
import krawler.erp.LeaseManagementWithInventoryFlow.OpenProductMaintenance1;
import krawler.erp.LeaseManagementWithInventoryFlow.OpenProductReplacement1;
import krawler.erp.LeaseManagementWithInventoryFlow.ProductManagement;
import krawler.erp.LeaseManagementWithInventoryFlow.SwitchToCRM;
import krawler.erp.RegressionLeaseManagementWithInventory.LeaseContract;
import krawler.erp.RegressionLeaseManagementWithInventory.LeaseDeliveryOrder;
import krawler.erp.RegressionLeaseManagementWithInventory.LeaseManagement;
import krawler.erp.RegressionLeaseManagementWithInventory.LeaseOrder;
import krawler.erp.RegressionLeaseManagementWithInventory.LeaseQuotation;
import krawler.erp.RegressionLeaseManagementWithInventory.OpenProductMaintenance;
import krawler.erp.page.CustomerMaster;
import krawler.erp.page.Login;
import krawler.erp.page.ProductMaster;
import krawler.erp.page.Utilities;


public class LeaseManagementWithFixedAssetFlowTC {
	public static WebDriver driver;
    public static String customerid="LeaseCustomer3"; 
    public static String documentid="Lease8"; 
    public static String Asset_ID="Asset1";
    public static String productid="Service";
  
    
    
   // Login into ERP Application
     @Parameters({ "server1","username","password" })
      @Test(priority=1)
      public void beforeTestLogin(String server1, String username, String password) throws InterruptedException, IOException, AWTException
      {
          Login ln = new Login();
          WebDriver driver = Login.loginERP(server1, username, password,10);
          	          this.driver = driver;
          	              
       }
    
    /*// Create Customer
      @Test(priority=10)
	  public void CreateCustomer() throws InterruptedException, IOException, AWTException
	  {
    	    CustomerManagement CM = new CustomerManagement();
			CM.create_Customer(customerid, driver);
			Thread.sleep(1000);
	  }
	  // Sync Customer into CRM application
      @Test(priority=20)
	 public void SyncCustomer() throws InterruptedException, IOException, AWTException		
	 {
	        CustomerManagement CM = new CustomerManagement();
			CM.Sync_Customer(customerid, driver);
			Thread.sleep(1000);
	  }
      
      
      // Create Asset Group
      @Test(priority=30)
      public void CreateAssetGroup() throws InterruptedException, IOException, AWTException
      {
    	  LeaseManagement2 LM2 = new LeaseManagement2();
    	  LM2.FixedAssetExpander(driver);
    	  
    	  AssetGroup AG= new AssetGroup();
    	  AG.create_AssetGroup(Asset_ID, driver);
    	  Thread.sleep(1000);
    	  Utilities.refresh();
      }
     // Create Opening Document for Asset Group and then synced same asset group into CRM application.
      @Test(priority=40)
      public void Create_Opening_forAsset() throws InterruptedException, IOException, AWTException
      {
          LeaseManagement2 LM2 = new LeaseManagement2();
    	  LM2.FixedAssetExpander(driver);
    	  AssetGroup AG= new AssetGroup();
    	  AG.Create_OpeningDoument(Asset_ID, driver);
    	  Utilities.refresh();
    	  
      }
      
      // Create Service Type Product
       @Test(priority=50)
      public void CreateServiceTypeProduct() throws InterruptedException, IOException, AWTException
      {
    	  ProductManagement2 PM = new ProductManagement2();
     	  PM.Create_ServiceProduct(productid, driver);
    	  Thread.sleep(1000);
      }
      
     // Create Lease Quotation
       @Test(priority=60)
 	  public void LMQuatationCreate() throws InterruptedException, IOException, AWTException {
 		LeaseManagement2 lm = new LeaseManagement2();
 	         lm.leaseManagementExpander(driver);
 			LeaseQuotation2 LMQ= new LeaseQuotation2();
           	LMQ.LM_CreateQuotation(documentid, "asset"+Asset_ID, customerid, driver);
 			Thread.sleep(2000);
 			Utilities.refresh();
 			
 	  }
 	 
 	 // Create Lease Order
 	 @Test(priority=70 ) 
    public void  LMOrderCreate() throws InterruptedException, IOException, AWTException {
	  LeaseManagement2 lm = new LeaseManagement2();
	  lm.leaseManagementExpander(driver);
				
	   LeaseOrder2 LMO= new LeaseOrder2();
	   LMO.LM_CreateOrder(documentid, Asset_ID, customerid, driver);
	   Thread.sleep(2000);
	   Utilities.refresh();
	  }
	  
   // Create Lease Contract
    @Test(priority=80 )
 	 public void  LContractCreate() throws InterruptedException, IOException, AWTException {
 				LeaseManagement2 lm = new LeaseManagement2();
 				lm.leaseManagementExpander(driver);
 				
 					LeaseContract2 LCon= new LeaseContract2();
 					LCon.LM_CreateContract(documentid, Asset_ID, customerid, driver);
 					Utilities.refresh();
 					
 	  }
   
    
  //  Create Lease Delivery Order
   @Test(priority=90 )
	 public void  LMDeliveryOrderCreate() throws InterruptedException, IOException, AWTException {
				LeaseManagement2 lm = new LeaseManagement2();
				lm.leaseManagementExpander(driver);
				
					LeaseDeliveryOrder2 LDO= new LeaseDeliveryOrder2();
					LDO.LM_CreateDeliveryOrder(documentid, Asset_ID, customerid, driver);
					Utilities.refresh();
			 }*/
			 
    
     // For Switch To CRM From ERP application
    @Test(priority=100)
    public void SwitchtoLoginCRM() throws InterruptedException, IOException, AWTException
    {
    	SwitchToCRM2.SwitchToCRMApplication(driver);
  

      } 
    
   /*// Create Case From CRM application 
   @Test(priority=110)

    public void CRMCase() throws InterruptedException, IOException, AWTException
    {
    	CRMHandle2 CM= new CRMHandle2();
    	CM.CRM_Case(documentid,driver,customerid);
    }*/
    
  // Create Maintenance Request From CRM application
    @Test(priority=120)
    public void CRM_MaintenanceRequest() throws InterruptedException, AWTException, IOException
    {
    CRMHandle2 CM= new CRMHandle2();
    CM.CRM_MaintenanceRequest(driver,customerid, documentid, Asset_ID);
    }
    

    // Switch To ERP application
    @Parameters({ "server1","username","password" })
    @Test(priority=130)
    public void Login_To_ERPapplication(String server1, String username, String password) throws InterruptedException, IOException, AWTException
    {
        Login ln = new Login();
        WebDriver driver = Login.loginERP(server1, username, password, 10);
        	          this.driver = driver;
        	              
    }
    
    // Create Sales Order for Maintenance Request which is raised from CRM side.
    @Test(priority=140)
    public void CreateSOForMaintenance() throws InterruptedException, AWTException, IOException
    {
    	NormalSalesOrder2 NSO= new NormalSalesOrder2();
    	String MaintenaceNumber= CRMHandle2.MaintenanceNumberforUse;
    	NSO.create_salesOrder(documentid, productid, customerid, driver, MaintenaceNumber);
    }
    
 // Switch To CRM application
    @Parameters({ "server2","username","password" })
    @Test(priority=150)
    public void Login_To_CRMapplication(String server2, String username, String password) throws InterruptedException, IOException, AWTException
    {
        Login ln = new Login();
        WebDriver driver = Login.loginERP(server2, username, password, 10);
        	          this.driver = driver;
    }
    
  
    // Check Maintenance Status
    @Test(priority=160)
    public void MaintenanceStatus_Check() throws InterruptedException, AWTException, IOException
    {
    	 CRMHandle2 CM= new CRMHandle2();
    	 CM.CRM_MaintenanceRequest_Verification(driver);
    	 Utilities.refresh();
    }
        
   // Create Replacement Request from CRM application
      @Test(priority=170)
      public void CRM_ReplacementRequest() throws InterruptedException, AWTException, IOException
      {
          CRMHandle2 CM= new CRMHandle2();
          CM.CRM_ReplacementRequest(driver,customerid, documentid, Asset_ID);
      }
      

      // Switch To ERP application
     @Parameters({ "server1","username","password" })
      @Test(priority=180)
      public void Switch_To_ERP(String server1, String username, String password) throws InterruptedException, IOException, AWTException
      {
          Login ln = new Login();
          WebDriver driver = Login.loginERP(server1, username, password, 10);
          	         this.driver = driver;
      }      
      
     /* // Create Second Lease Order with Replacement Request
      @Test(priority=190 ) 
      public void  LMOrderCreate_withReplcement() throws InterruptedException, IOException, AWTException {
 				LeaseManagement1 lm = new LeaseManagement1();
 				lm.leaseManagementExpander(driver);
 				LeaseOrder1 LMO= new LeaseOrder1();
 				String ReplcementNo= CRMHandle.MyCreatedno;
 				LMO.LM_CreateOrde_linked_WithReplacement(documentid, productid, customerid, driver,ReplcementNo);
 				Thread.sleep(2000);
 				Utilities.refresh();
}
     // Create Second Lease Delivery Order linked with those Lease order which has been created for Replacement Request.
      @Test(priority=200)
      public void LM_DeliveryOrder_Create_WithSecondLO() throws InterruptedException, IOException, AWTException
      {
    	  LeaseManagement1 lm = new LeaseManagement1();
			lm.leaseManagementExpander(driver);
			LeaseDeliveryOrder1 LDO1=new LeaseDeliveryOrder1();
			LDO1.LM_CreateLDO_With_SecondLO(documentid, productid, customerid, driver);
			Thread.sleep(2000);
			Utilities.refresh();
				
      }
      
  // Create Lease Sales Return linked with First Lease DO
      @Test(priority=210)
      public void LM_SalesReturn_Create() throws InterruptedException, IOException, AWTException
      {
    	  LeaseManagement1 lm = new LeaseManagement1();
			lm.leaseManagementExpander(driver);
			LeaseSalesReturn1 LSR1= new LeaseSalesReturn1();
			LSR1.LM_CreateSalesReturn(documentid, productid, customerid, driver);
			Thread.sleep(2000);
			Utilities.refresh();
      }
      
   // Create Lease Sales Invoice linked with Second Lease Delivery Oder 
      @Test(priority=220)
      public void LM_SalesInvoice_Create() throws InterruptedException, IOException, AWTException{
      LeaseManagement1 lm = new LeaseManagement1();
		lm.leaseManagementExpander(driver);
		LeaseInvoice1 LSI1= new LeaseInvoice1();
		LSI1.LM_CreateInvoice(documentid, productid, customerid, driver);
		Thread.sleep(2000);
		Utilities.refresh();
      }
      
   // Verify Product Replacement Report
      @Test(priority=230)
      public void LM_Product_Replacement_ReportVerification() throws InterruptedException, IOException, AWTException
      {
    	 LeaseManagement2 lm = new LeaseManagement2();
  		lm.leaseManagementExpander(driver);
  		OpenProductReplacement2 OPR1= new OpenProductReplacement2();
  		String expectedText="Product Replacement Report";
  		OPR1.LM_VerifyProductReplcaement(expectedText,driver);
  		Thread.sleep(2000);
      }
      
     // Verify Product Maintenance Report
      @Test(priority=240)
 	  public void LM_ProductMaintenance_ReportVerification() throws InterruptedException, IOException, AWTException {
 		LeaseManagement2 lm = new LeaseManagement2();
 		lm.leaseManagementExpander(driver);
 		OpenProductMaintenance2 OPR1= new OpenProductMaintenance2();
 		String expectedText1="Product Maintenance Report";
 		OPR1.LM_VerifyProductMaintenance(expectedText1, driver);
 		Thread.sleep(2000);
 		Utilities.refresh();
 	  }
    */
    
}  

