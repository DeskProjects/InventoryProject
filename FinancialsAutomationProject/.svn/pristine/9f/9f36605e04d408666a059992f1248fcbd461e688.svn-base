package krawler.erp.testcase.MPRP_BankReconcilationmodule;

import java.awt.AWTException;
import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import krawler.erp.BankReconcilation.CreatePaymethodandCOA;
import krawler.erp.MP_RPModule.LIFO_FIFO_Monthwise_MP_RP;
import krawler.erp.page.CustomerMaster;
import krawler.erp.page.Login;
import krawler.erp.page.Utilities;
import krawler.erp.page.VendorMaster;

public class MPRP_LIFO_FIFO {
	public static WebDriver driver;	
	public static String server1 ="http://192.168.0.208:8080/dotcomsmoketestingv21/a/rahulv21/#";	
	public static String username ="admin";	
	public static String password ="1234";
	public static String documentId = "J31";
	public static String vendorid = "TestVen";
	public static String customerid = "TestCus";
	public static String productid = "Test Product";
	public static String DocumentCurrency = "SG Dollar (SGD)";

	
	
	@BeforeTest
	public void beforeTestLogin() throws InterruptedException, IOException
	{
		Login ln = new Login();
		WebDriver driver = Login.loginERP(server1, username, password,10);    	
		this.driver = driver;  
		 Utilities.clickExpander(driver);
	}
	

	@Test (priority = 1)
    public void Create_VendorMaster() throws InterruptedException, IOException, AWTException
    {
        VendorMaster.create_Vendor(vendorid, driver);        
    }
	
	 @Test(priority=2)
	public void createPI() throws InterruptedException, AWTException, IOException
	 {
		LIFO_FIFO_Monthwise_MP_RP.PurchaseInvoice1(driver, documentId, vendorid, productid, DocumentCurrency);
		LIFO_FIFO_Monthwise_MP_RP.PurchaseInvoice2(driver, documentId, vendorid, productid, DocumentCurrency);
		LIFO_FIFO_Monthwise_MP_RP.PurchaseInvoice3(driver, documentId, vendorid, productid, DocumentCurrency);
		}
	
	 @Test (priority = 3)
	   public void CreateMP() throws InterruptedException, IOException, AWTException
	   {
		 LIFO_FIFO_Monthwise_MP_RP.CreateMAkePayment(driver, documentId+"FIFO", vendorid, "100", "Invoice Date FIFO");       
		 LIFO_FIFO_Monthwise_MP_RP.CreateMAkePayment(driver, documentId+"LIFO", vendorid, "100", "Invoice Date LIFO");       
		 LIFO_FIFO_Monthwise_MP_RP.CreateMAkePayment2(driver, documentId+"Monthwise", vendorid, "100", "Invoice Month-wise");       

	   }
	 @Test (priority = 4)
	   public void Verifylifo_Fifo_monthwise_MP() throws InterruptedException, AWTException, IOException{
		 LIFO_FIFO_Monthwise_MP_RP.VerificationLIFO_FIFO_Monthwise(driver, documentId+"FIFO", "PIFIFO"+documentId, "is successfully linked to FIFO PI");
		 LIFO_FIFO_Monthwise_MP_RP.VerificationLIFO_FIFO_Monthwise(driver, documentId+"LIFO", "PILIFO"+documentId, "is successfully linked to LIFO PI");
		 LIFO_FIFO_Monthwise_MP_RP.VerificationLIFO_FIFO_Monthwise(driver, documentId+"Monthwise", "PIMonth"+documentId, "is successfully linked to Monthly PI");

	 }

	@Test (priority = 5)
	public void Create_CustomerMaster() throws InterruptedException, IOException, AWTException
	{
		CustomerMaster.create_Customer(customerid, driver);    
	}
			
	@Test(priority=6)
	public void createSI() throws InterruptedException, AWTException, IOException
	{
		LIFO_FIFO_Monthwise_MP_RP.create_salesInvoice(documentId, productid, customerid, driver);
		LIFO_FIFO_Monthwise_MP_RP.create_salesInvoice2(documentId, productid, customerid, driver);
		LIFO_FIFO_Monthwise_MP_RP.create_salesInvoice3(documentId, productid, customerid, driver);

	 }	
	 
	@Test (priority = 7)
	   public void CreateRP() throws InterruptedException, IOException, AWTException
	   {
	LIFO_FIFO_Monthwise_MP_RP.CreateReceivePayment(driver, documentId+"FIFO", customerid, "100", "Invoice Date FIFO");
	LIFO_FIFO_Monthwise_MP_RP.CreateReceivePayment(driver, documentId+"LIFO", customerid, "100", "Invoice Date LIFO");
	LIFO_FIFO_Monthwise_MP_RP.CreateReceivePayment2(driver, documentId+"Monthwise", customerid, "100", "Invoice Month-wise");
}
	
	
	 @Test (priority = 8)
	   public void Verifylifo_Fifo_monthwise_RP() throws InterruptedException, AWTException, IOException{
		 LIFO_FIFO_Monthwise_MP_RP.VerificationLIFO_FIFO_MonthwiseRP(driver, documentId+"FIFO", "PIFIFO"+documentId, "is successfully linked to FIFO SI");
		 LIFO_FIFO_Monthwise_MP_RP.VerificationLIFO_FIFO_MonthwiseRP(driver, documentId+"LIFO", "PILIFO"+documentId, "is successfully linked to LIFO SI");
		 LIFO_FIFO_Monthwise_MP_RP.VerificationLIFO_FIFO_MonthwiseRP(driver, documentId+"Monthwise", "PIMonth"+documentId, "is successfully linked to Monthwise SI");
	 }
		@AfterTest
		public  void close(){
			driver.close();
		}
}
